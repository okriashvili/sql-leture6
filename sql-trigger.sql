-- triggers/ტრიგერები:
-- triggers/ტრიგერები:
-- ავტომატური მექანიზმი რომელიც ავტომატურად იძახებს ფუნქციას, მონაცემის შეცვლის/წაშლის/დამატების დროს
-- შეგვიძლია ავტომატურად მივუთითოთ როდის და რა დროს გაეშვას ფუქნციას,
-- მაგ: მონაცემის შენახვისას/წაშლის/დამატების დროს და ან ოპერაციის დაწყების თუ დამთავრების შემდეგ დროს.
-- triggerის შექმნის სინტაქსი / სანამ შევქმნით ტრიგერს უნდა შევქმნათ ფინქცია და ეს ფუქნცია უნდა აღვასრულებინოთ ტრიგერს

-- ფუნქციას ვქმნით ისევე როგორც პროცედურას და 
-- ისეთივე სინტაქსი აქვს როგორ პროცედურის შექმნას, მაგრამ პროცედურისგან განსხვავებით ტრიგერი აბრუნებს 
-- create or replace function check_status()
-- -- create ბრანების შემდეგ უნდა დავუწეროთ return trigger ბრძანება
-- returns trigger
-- language plpgsql AS
-- $$
-- BEGIN
-- როდესაც ფუნქციას ვქმნით და მონაცემი/ობიექტი განახლდება, ფუქნცია ამას აღიქვანს როგორც new 
-- ამიტომ სინქტასია შემდეგი. იმ სვეტს რომელსაც ვცვლით და ვიყენებთ ფუნქციაში უნდა დავუწეროთ წინ new. საკვანძო სიტყვა
-- -- დავახარისხოთ დასაქმებულები ხელფასის მიხედვით
-- 	if new.salary > 60000 then
-- ფუნქციაში, ოპერაციის გაწერის შემდეგ მაგ: როგორც გვიწერია რომ თუკი salary არის 60000მეტი, უნდა დავუწეროთ then საკვანძო სიტყვა რაც გულისხმობს რომ >>>
-- თუკი salary არის 60000მეტი, მაშინ(then) გააკეთე ის რასაც შემდეგ დავუწეროთ
-- 	new.status := 'high salary';
-- 	elseif new.salary between 50000 and 60000 then
-- 	new.status := 'normal';
-- 	else
-- 	new.status := 'base';
-- ბოლოს კი უნდა გავუწეროთ: end if - აღნიშნავს იმას თუკი სად უნდა დამთავრდეს და >>;
-- 	end if;
-- დამთავრების შემდეგ კი უნდა დააბრუნოს new ობიექტი
-- 	return new;
-- END
-- $$
-- მას შემდეგ რაც შევქმენით ფუნქცია უნდა შევქმნათ ტრიგერი რომელიც აღასრულლებს ამ ფუნქციას ავტოომატურად
-- trigger syntax:
		-- CREATE TRIGGER update_status--create trigger ის შემდეგ ტრიგერუს სახელი 
-- before ან after(ერთ-ერთი ბრძანება) - update or innsert ის გაკეთებამდე თუ გაკეთების შემდეგ გაეშვას ტრიგერი 
-- ანუ ცხრილში მონაცემის შეყვანა/შეცვლამდე თუ შემდეგ უნდა გაეშვას ტრიგერი
-- on-ს უნდა დავუწეროთ ცხრილის სახელი რომელ ცხრილზეც უნდა გაკეთდეს ტრიგერი
-- on ით მივუთითებთ იმას თუკი რომელ ცხრილზეც უნდა ავამუშავოთ ტრიგერი
		-- before update or insert on employees
-- ცხრილზე დაკავშირების შემდეგ უნდა გავუწეროთ რომ ყველა რიგზე უნდა აღასრულოს ფუნქცია 
		-- for each row 
-- ბოლოს კი ბრძანება რომ ფუნქცია აღესრულოს და ფუნქციის დასახელება რომელიც უნდა გაეშვას
		-- execute function check_status()
-- შექმნილი ტრიგერის ნახვა შეგვიძლია tableში იმ ცხრილშ რომელშიც შევქმენით
		-- CREATE TRIGGER update_status
		-- before update or insert on employees
		-- for each row
		-- execute function check_status()


--  მას შემდეგ რაც დაავააფდეიდებთ ნებისმიერ მონაცემს ტრიგერი ავტომატურად გაეშვება ამ მონაცემის-ს statusზე და შეიცვლება 
update employees set department_id = 7 where employee_id = 11
-- მას შემდეგ რაც employeeს შევუცვალეთ დეპარტამენტი, statusიც ავტომატურად შეიცვალა normalზე, რადგანაც მისი ხელფასი იყო 50 da 60 ათასს შორის 